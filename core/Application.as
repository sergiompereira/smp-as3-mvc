////////////////////////////////////////////////////////////////////////////////////// AS3-SimpleMVC - Copyright (c) 2008 Tony Birleffi//// Permission is hereby granted, free of charge, to any person// obtaining a copy of this software and associated documentation// files (the "Software"), to deal in the Software without// restriction, including without limitation the rights to use,// copy, modify, merge, publish, distribute, sublicense, and/or sell// copies of the Software, and to permit persons to whom the// Software is furnished to do so, subject to the following conditions://// The above copyright notice and this permission notice shall be// included in all copies or substantial portions of the Software.//// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR// OTHER DEALINGS IN THE SOFTWARE.////////////////////////////////////////////////////////////////////////////////////package com.smp.mvc.core{	import flash.display.MovieClip;		import com.smp.mvc.interfaces.IApplication;		/**	 * This is the specific class that starts an application. 	 * It adds all the necessary views and sets the model up. 	 * This is where you will pass to the model what data to use and 	 * you will also pass the model to all the views in their own constructors.	 * 	 * @example	 * <listing>	 * import org.simplemvc.Application;	 * var app:Application = new Application();	 * app.init();	 * </listing>	 * 	 * @author Tony Birleffi	 */	public class Application extends MovieClip implements IApplication	{		/** Define the flash vars. */		private var fvars:Object = null;				/**		 * Constructor.		 */		 public function Application()		 {			 	// Call the init.		 	init();		 }		 		/**		 * Initializes the application.		 */		 public function init():void 		 {		 	setupDomainAccess();		 	setupContextMenu();		 	setupConfig();		 }		 		/**		 * Setup the domain access.		 */		public function setupDomainAccess():void		{			// Allow domains here.		}				/**		 * Setup the context menu.		 */		public function setupContextMenu():void		{			// Add context menu items here.		}				/**		 * Setup the config.		 */		public function setupConfig():void		{			// Load the config.		}				/**		 * Setup the styles.		 */		public function setupStyles():void		{			// Load the style sheet.		}				/**		 * Setup the application.		 */		public function setupApplication():void		{			// This is where you setup the application.		}				/**		 * Gets the flash vars.		 * 		 * @return Object.		 */		 public function get flashVars():Object		 {		 	return fvars;		 }		 		 /**		 * Sets the flash vars.		 * 		 * @param obj		flash vars object.		 */		 public function set flashVars( obj:Object ):void		 {		 	fvars = obj;		 }	}}