////////////////////////////////////////////////////////////////////////////////////// AS3-SimpleMVC - Copyright (c) 2008 Tony Birleffi//// Permission is hereby granted, free of charge, to any person// obtaining a copy of this software and associated documentation// files (the "Software"), to deal in the Software without// restriction, including without limitation the rights to use,// copy, modify, merge, publish, distribute, sublicense, and/or sell// copies of the Software, and to permit persons to whom the// Software is furnished to do so, subject to the following conditions://// The above copyright notice and this permission notice shall be// included in all copies or substantial portions of the Software.//// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR// OTHER DEALINGS IN THE SOFTWARE.////////////////////////////////////////////////////////////////////////////////////package com.smp.mvc.interfaces {	import flash.events.Event;			import com.smp.mvc.interfaces.IModel;	import com.smp.mvc.interfaces.IController;			/**	 * This is the interface class for the View.	 * 	 * @see org.simplemvc.core.View;	 * 	 * @author Tony Birleffi	 */	public interface IView 	{				/**		 * Register events for the view.		 */		function registerEvents():void				/**		 * The show method.		 * 		 * @param event		Event.		 */		function show( event:Event = null):void				/**		 * The hide method.		 * 		 * @param event		Event.		 */		function hide( event:Event = null):void						/**		 * Sets the view's model.		 * 		 * @param model		the model object.		 */		function set model( model:IModel ):void;				/**		 * Gets the view's model.		 */		function get model():IModel;				/**		 * Sets the controller to associate with this view.		 * 		 * @param controller	IController interface.		 */		function set controller( controller:IController ):void;				/**		 * Gets the view's controller instance.		 */		function get controller():IController;	}}